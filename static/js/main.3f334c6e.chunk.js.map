{"version":3,"sources":["components/Header.js","components/Form.js","helperFunctions.js","components/Summary.js","components/Results.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","className","title","Form","brandRef","React","createRef","yearRef","planBasicRef","planFullRef","cotizarSeguro","e","preventDefault","plan","current","checked","infoAuto","brand","value","year","onSubmit","this","name","ref","type","id","Component","firstMayus","text","charAt","toUpperCase","slice","Summary","showSummary","data","Result","result","message","TransitionGroup","component","CSSTransition","key","timeout","classNames","App","state","Date","getFullYear","yearDiference","increments","calculateBrand","incrementPlan","typePlan","parseFloat","toFixed","carData","setState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f334c6e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = props => {\n    return (\n        <header className=\"rounded-top\">\n            <h1 className=\"d-flex justify-content-center\">\n                {props.title}\n            </h1>\n        </header>\n    )\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Form extends Component {\n\n    //ref son para leer los valores de los campos de un formulario\n\n    brandRef = React.createRef();       //Marca\n    yearRef = React.createRef();        //a単o\n    planBasicRef = React.createRef();   //plan basico\n    planFullRef = React.createRef();    //plan completo\n\n\n    cotizarSeguro = (e) => {\n        e.preventDefault();\n        \n        //leer plan\n        const plan = this.planBasicRef.current.checked ? 'basic' : 'full';\n\n        //obtener los datos\n        //console.log(this.brandRef.current.value);\n\n        //crear objeto\n        const infoAuto = {\n            brand: this.brandRef.current.value,\n            year: this.yearRef.current.value,\n            plan: plan            \n        }\n        //console.log(infoAuto)\n        \n        //enviarlo al componente principal (App)\n        this.props.cotizarSeguro(infoAuto);\n\n        //reset formulario->Opcional\n        //e.currentTarget.reset();\n\n    }\n\n    render() {\n        return (\n            <form className=\"mb-5\" onSubmit={this.cotizarSeguro}>                \n                <div className=\"d-flex justify-content-center mb-3\">\n                    <label className=\"col-3\">Marca</label>\n                    <select className=\"form-control col-3\" name=\"marca\" ref={this.brandRef}>                       \n                        <option value=\"americano\">Americano</option>\n                        <option value=\"europeo\">Europeo</option>\n                        <option value=\"asiatico\">Asiatico</option>\n                    </select>\n                </div>\n            \n                <div className=\"d-flex justify-content-center mt-3\">\n                    <label className=\"col-3\">A単o</label>\n                    <select className=\"col-3 form-control\" name=\"year\" ref={this.yearRef}>   \n                        <option value=\"2019\">2019</option>                     \n                        <option value=\"2018\">2018</option>\n                        <option value=\"2017\">2017</option>\n                        <option value=\"2016\">2016</option>\n                        <option value=\"2015\">2015</option>\n                        <option value=\"2014\">2014</option>\n                        <option value=\"2013\">2013</option>\n                        <option value=\"2012\">2012</option>\n                        <option value=\"2011\">2011</option>\n                        <option value=\"2010\">2010</option>\n                        <option value=\"2009\">2009</option>\n                        <option value=\"2008\">2008</option>\n                    </select>\n                </div>\n            \n                <div className=\"d-flex justify-content-center mt-4 mb-3\">\n                    <legend className=\"col-form-label col-3 pt-0\">Plan:</legend>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios1\"     value=\"basic\" ref={this.planBasicRef} />\n                        <label className=\"form-check-label mr-2\">\n                            Basico\n                        </label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios2\"     value=\"full\" ref={this.planFullRef} />\n                        <label className=\"form-check-label\" >\n                            Completo\n                        </label>\n                    </div>\n                </div>\n            \n                <button type=\"submit\" className=\"button btn-lg btn-block rounded mt-3\">Cotizar</button>\n            </form>\n        );\n    }\n}\n\nexport default Form;","//obtener la diferencia de a単os\nexport function yearDiference (year) {     \n    return new Date().getFullYear() - year;\n}\n\n//calculo del incremento por la marca\nexport function calculateBrand (brand) {\n    let increments\n\n    switch (brand) {\n        case 'europeo':\n            increments = 1.30;\n            break;\n\n        case 'americano':\n            increments = 1.15;\n            break;\n        \n        case 'asiatico':\n            increments = 1.05;\n            break;\n    \n        default:\n            break;\n    }\n\n    return increments\n}\n\n//obtener el tipo de plan\nexport function typePlan (plan) {               \n    return (plan === 'basic') ? 1.20 : 1.50;\n}\n\n//Hacer primera letra mayuscula\nexport function firstMayus (text) {\n    return text.charAt(0).toUpperCase() + text.slice(1);\n}","import React, { Component } from 'react';\n\nimport { firstMayus } from '../helperFunctions';\n\nclass Summary extends Component {\n\n    showSummary = () => {\n        const { brand, year, plan } = this.props.data;\n\n        if(!brand || !year || !plan) return null;\n\n        return (\n            <div className=\"d-flex justify-content-center mt-1 pt-2 pb-3 summary\">\n            <div className=\"d-flex flex-column align-items-center\">\n                <h2>Resumen de Cotizacion</h2>\n\n                <li>Marca: { firstMayus(brand) }</li>\n                <li>Plan: { firstMayus(plan) }</li>\n                <li>A単o del auto: { year }</li>\n           </div>\n         \n       </div>\n        )\n    }\n\n    render () {\n        \n        return (\n           <div>\n               { this.showSummary() }\n           </div>\n        )\n    }\n}\n\nexport default Summary","import React, { Component } from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Result extends Component {   \n\n    render () {   \n\n        const result = this.props.result;\n        const message = (!result) ? 'Elije Marca, A単o y tipo de de Plan Seguro' : 'El total es: $'\n\n        return (   \n           <div className=\"d-flex flex-row justify-content-center mb-3 mt-3 p-2  total\">\n               {message}\n               <TransitionGroup component=\"span\" className=\"result\">\n                   <CSSTransition key={result} timeout={500} classNames=\"result\">\n                        <span>{result}</span>\n                   </CSSTransition>\n               </TransitionGroup>               \n           </div>\n        )\n    }\n}\n\nexport default Result","import React, { Component } from 'react';\n\nimport Header from './Header';\nimport Form from './Form';\nimport Summary from './Summary';\nimport Result from './Results';\n\nimport { yearDiference, calculateBrand, typePlan } from '../helperFunctions';\n\nclass App extends Component {\n\n    state = {\n        result : '',\n        data: {}\n    }\n\n    cotizarSeguro = (data) => {\n        const { brand, year, plan } = data; \n\n        //agregar una base de 2000\n        let result = 2000\n\n        //obtener la diferencia de a単os\n        const diference = yearDiference(year);\n\n        //por cada a単o restar 3% al valor del seguro\n        result -= ((diference * (3/100)) * result);\n        \n\n        //Europeo 30% Americado 15% Asiatico 5% de incremento del valor actual\n        result = calculateBrand(brand) * result;\n\n        //EL plan del auto, basic=20% . full=50%\n        let incrementPlan = typePlan(plan);\n        result = parseFloat(result * incrementPlan).toFixed(2);\n        //ya con eso tenemos el costo\n\n        // Crear objeto para el resumen\n        const carData = {\n            brand: brand,\n            year: year,\n            plan: plan\n        }\n\n        this.setState({\n            result: result,\n            data: carData\n        })\n    }\n\n    render() {\n        \n        return (\n            <div className=\"container col-6\">\n                <Header title='Cotizador de Seguro de Autos'/>\n    \n                <div className=\"bg-white p-5\">\n                    <Form cotizarSeguro = {this.cotizarSeguro}/>\n\n                    <Summary data = {this.state.data}/>\n\n                    <Result result = {this.state.result}/>\n                </div>              \n    \n            </div>\n        );\n    }    \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}